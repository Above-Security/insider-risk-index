version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: insider-risk-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: insider_risk_index
      POSTGRES_USER: insider_risk_user
      POSTGRES_PASSWORD: insider_risk_password_dev
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-extensions.sql:/docker-entrypoint-initdb.d/init-extensions.sql
    ports:
      - "5432:5432"
    networks:
      - insider-risk-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U insider_risk_user -d insider_risk_index"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  redis:
    image: redis:7-alpine
    container_name: insider-risk-redis
    restart: unless-stopped
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - insider-risk-network
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: insider-risk-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@insiderisk.io
      PGADMIN_DEFAULT_PASSWORD: admin_dev_password
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./scripts/pgadmin-servers.json:/pgadmin4/servers.json
    ports:
      - "5050:80"
    networks:
      - insider-risk-network
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  postgres_data:
    name: insider_risk_postgres_data
  redis_data:
    name: insider_risk_redis_data
  pgadmin_data:
    name: insider_risk_pgadmin_data

networks:
  insider-risk-network:
    name: insider-risk-network
    driver: bridge